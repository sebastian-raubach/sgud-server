/*
 * This file is generated by jOOQ.
 */
package raubach.sgud.server.database.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;

import raubach.sgud.server.database.Indexes;
import raubach.sgud.server.database.Sgud;
import raubach.sgud.server.database.tables.records.RatingCategoriesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingCategories extends TableImpl<RatingCategoriesRecord> {

    private static final long serialVersionUID = 846134949;

    /**
     * The reference instance of <code>sgud.rating_categories</code>
     */
    public static final RatingCategories RATING_CATEGORIES = new RatingCategories();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RatingCategoriesRecord> getRecordType() {
        return RatingCategoriesRecord.class;
    }

    /**
     * The column <code>sgud.rating_categories.id</code>.
     */
    public final TableField<RatingCategoriesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>sgud.rating_categories.category_id</code>.
     */
    public final TableField<RatingCategoriesRecord, Integer> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sgud.rating_categories.name</code>.
     */
    public final TableField<RatingCategoriesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>sgud.rating_categories.description</code>.
     */
    public final TableField<RatingCategoriesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sgud.rating_categories.include_in_average</code>.
     */
    public final TableField<RatingCategoriesRecord, Boolean> INCLUDE_IN_AVERAGE = createField("include_in_average", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>sgud.rating_categories.created_on</code>.
     */
    public final TableField<RatingCategoriesRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>sgud.rating_categories.updated_on</code>.
     */
    public final TableField<RatingCategoriesRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>sgud.rating_categories</code> table reference
     */
    public RatingCategories() {
        this(DSL.name("rating_categories"), null);
    }

    /**
     * Create an aliased <code>sgud.rating_categories</code> table reference
     */
    public RatingCategories(String alias) {
        this(DSL.name(alias), RATING_CATEGORIES);
    }

    /**
     * Create an aliased <code>sgud.rating_categories</code> table reference
     */
    public RatingCategories(Name alias) {
        this(alias, RATING_CATEGORIES);
    }

    private RatingCategories(Name alias, Table<RatingCategoriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private RatingCategories(Name alias, Table<RatingCategoriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sgud.SGUD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RATING_CATEGORIES_PRIMARY, Indexes.RATING_CATEGORIES_RATINGCATEGORIES_IBFK_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RatingCategoriesRecord, Integer> getIdentity() {
        return Internal.createIdentity(raubach.sgud.server.database.tables.RatingCategories.RATING_CATEGORIES, raubach.sgud.server.database.tables.RatingCategories.RATING_CATEGORIES.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RatingCategoriesRecord> getPrimaryKey() {
        return Internal.createUniqueKey(raubach.sgud.server.database.tables.RatingCategories.RATING_CATEGORIES, "KEY_rating_categories_PRIMARY", raubach.sgud.server.database.tables.RatingCategories.RATING_CATEGORIES.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RatingCategoriesRecord>> getKeys() {
        return Arrays.<UniqueKey<RatingCategoriesRecord>>asList(
              Internal.createUniqueKey(raubach.sgud.server.database.tables.RatingCategories.RATING_CATEGORIES, "KEY_rating_categories_PRIMARY", raubach.sgud.server.database.tables.RatingCategories.RATING_CATEGORIES.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RatingCategories as(String alias) {
        return new RatingCategories(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RatingCategories as(Name alias) {
        return new RatingCategories(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RatingCategories rename(String name) {
        return new RatingCategories(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RatingCategories rename(Name name) {
        return new RatingCategories(name, null);
    }
}
