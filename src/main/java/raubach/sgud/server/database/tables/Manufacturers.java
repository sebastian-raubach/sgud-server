/*
 * This file is generated by jOOQ.
 */
package raubach.sgud.server.database.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;

import raubach.sgud.server.database.Indexes;
import raubach.sgud.server.database.Sgud;
import raubach.sgud.server.database.tables.records.ManufacturersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Manufacturers extends TableImpl<ManufacturersRecord> {

    private static final long serialVersionUID = 1561833710;

    /**
     * The reference instance of <code>sgud.manufacturers</code>
     */
    public static final Manufacturers MANUFACTURERS = new Manufacturers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ManufacturersRecord> getRecordType() {
        return ManufacturersRecord.class;
    }

    /**
     * The column <code>sgud.manufacturers.id</code>.
     */
    public final TableField<ManufacturersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>sgud.manufacturers.name</code>.
     */
    public final TableField<ManufacturersRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>sgud.manufacturers.description</code>.
     */
    public final TableField<ManufacturersRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sgud.manufacturers.url</code>.
     */
    public final TableField<ManufacturersRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sgud.manufacturers.created_on</code>.
     */
    public final TableField<ManufacturersRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>sgud.manufacturers.updated_on</code>.
     */
    public final TableField<ManufacturersRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>sgud.manufacturers</code> table reference
     */
    public Manufacturers() {
        this(DSL.name("manufacturers"), null);
    }

    /**
     * Create an aliased <code>sgud.manufacturers</code> table reference
     */
    public Manufacturers(String alias) {
        this(DSL.name(alias), MANUFACTURERS);
    }

    /**
     * Create an aliased <code>sgud.manufacturers</code> table reference
     */
    public Manufacturers(Name alias) {
        this(alias, MANUFACTURERS);
    }

    private Manufacturers(Name alias, Table<ManufacturersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Manufacturers(Name alias, Table<ManufacturersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sgud.SGUD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MANUFACTURERS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ManufacturersRecord, Integer> getIdentity() {
        return Internal.createIdentity(raubach.sgud.server.database.tables.Manufacturers.MANUFACTURERS, raubach.sgud.server.database.tables.Manufacturers.MANUFACTURERS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ManufacturersRecord> getPrimaryKey() {
        return Internal.createUniqueKey(raubach.sgud.server.database.tables.Manufacturers.MANUFACTURERS, "KEY_manufacturers_PRIMARY", raubach.sgud.server.database.tables.Manufacturers.MANUFACTURERS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ManufacturersRecord>> getKeys() {
        return Arrays.<UniqueKey<ManufacturersRecord>>asList(
              Internal.createUniqueKey(raubach.sgud.server.database.tables.Manufacturers.MANUFACTURERS, "KEY_manufacturers_PRIMARY", raubach.sgud.server.database.tables.Manufacturers.MANUFACTURERS.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Manufacturers as(String alias) {
        return new Manufacturers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Manufacturers as(Name alias) {
        return new Manufacturers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Manufacturers rename(String name) {
        return new Manufacturers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Manufacturers rename(Name name) {
        return new Manufacturers(name, null);
    }
}
