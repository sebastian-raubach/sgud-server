/*
 * This file is generated by jOOQ.
 */
package raubach.sgud.server.database.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import raubach.sgud.server.database.tables.ItemImages;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemImagesRecord extends UpdatableRecordImpl<ItemImagesRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1848412568;

    /**
     * Setter for <code>sgud.item_images.item_id</code>.
     */
    public void setItemId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sgud.item_images.item_id</code>.
     */
    public Integer getItemId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sgud.item_images.image_id</code>.
     */
    public void setImageId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>sgud.item_images.image_id</code>.
     */
    public Integer getImageId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ItemImages.ITEM_IMAGES.ITEM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ItemImages.ITEM_IMAGES.IMAGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getItemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getImageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getItemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getImageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemImagesRecord value1(Integer value) {
        setItemId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemImagesRecord value2(Integer value) {
        setImageId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemImagesRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemImagesRecord
     */
    public ItemImagesRecord() {
        super(ItemImages.ITEM_IMAGES);
    }

    /**
     * Create a detached, initialised ItemImagesRecord
     */
    public ItemImagesRecord(Integer itemId, Integer imageId) {
        super(ItemImages.ITEM_IMAGES);

        set(0, itemId);
        set(1, imageId);
    }
}
